/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto_adm;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.JPanel;

/**
 *
 * @author jemf
 */
public class Adm extends javax.swing.JFrame {

    /**
     * Creates new form Adm
     */
    public Adm() throws SQLException, ClassNotFoundException {
        t = new Thread(new Lector());
        cnx = new Conexion();
        initComponents();
        setVisible(true);
        contador = cnx.conseguirId(cnx.obtener());
        if(cnx.getPropuesta(Conexion.obtener(), contador) == null){
            contador+=1;
        }
        pack();
        myPanel.setLayout(new BoxLayout(myPanel, BoxLayout.Y_AXIS));
        t.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        publicar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtPropuesta = new javax.swing.JTextArea();
        scrollPane1 = new java.awt.ScrollPane();
        myPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("publicar");

        publicar.setText("publicar");
        publicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publicarActionPerformed(evt);
            }
        });

        jLabel6.setText("Ãºltimas publicaciones");

        txtPropuesta.setColumns(20);
        txtPropuesta.setRows(5);
        jScrollPane2.setViewportView(txtPropuesta);

        javax.swing.GroupLayout myPanelLayout = new javax.swing.GroupLayout(myPanel);
        myPanel.setLayout(myPanelLayout);
        myPanelLayout.setHorizontalGroup(
            myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 543, Short.MAX_VALUE)
        );
        myPanelLayout.setVerticalGroup(
            myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 411, Short.MAX_VALUE)
        );

        scrollPane1.add(myPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(publicar, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 220, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(143, 143, 143))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(publicar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void publicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publicarActionPerformed
        try {
            new Conexion().sendPropuesta(conexion.obtener(), txtPropuesta.getText());
        } catch (SQLException ex) {
            Logger.getLogger(Adm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Adm.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtPropuesta.setText("");
    }//GEN-LAST:event_publicarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel myPanel;
    private javax.swing.JButton publicar;
    private java.awt.ScrollPane scrollPane1;
    private javax.swing.JTextArea txtPropuesta;
    // End of variables declaration//GEN-END:variables
    private Conexion conexion;
    private Conexion cnx;
    private Thread t;
    private int contador,num_panel;
    private ArrayList<Panel_publicaciones> paneles = new ArrayList<Panel_publicaciones>();

    private class Lector implements Runnable {

        public void run() {
            while (true) {

                try {
                    if (paneles.size() == 0 && cnx.getPropuesta(Conexion.obtener(), contador) != null) {
                        paneles.add(new Panel_publicaciones(cnx.getPropuesta(cnx.obtener(), contador), contador));
                        myPanel.add(paneles.get(num_panel));
                        pack();
                        contador += 1;
                        num_panel+=1;

                    } else if (cnx.getPropuesta(Conexion.obtener(), contador) != null && paneles.size() != 0 && paneles.get(num_panel-1).getText() != null) {
                        if (!cnx.getPropuesta(cnx.obtener(), contador).equals(paneles.get(num_panel-1).getText())) {
                            paneles.add(new Panel_publicaciones(cnx.getPropuesta(cnx.obtener(), contador), contador));
                            myPanel.add(paneles.get(num_panel));
                            pack();
                            contador += 1;
                            num_panel+=1;

                        }

                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Adm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Adm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
}
